<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Commentaire extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Commentaire_model');
    } 

    /*
     * Listing of commentaires
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('commentaire/index?');
        $config['total_rows'] = $this->Commentaire_model->get_all_commentaires_count();
        $this->pagination->initialize($config);

        $data['commentaires'] = $this->Commentaire_model->get_all_commentaires($params);
        
        $data['_view'] = 'commentaire/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new commentaire
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'commentaire_article_uid' => $this->input->post('commentaire_article_uid'),
				'commentaire_user' => $this->input->post('commentaire_user'),
				'commentaire_statut' => $this->input->post('commentaire_statut'),
				'commentaire_created_at' => $this->input->post('commentaire_created_at'),
				'commentaire_created_by' => $this->input->post('commentaire_created_by'),
				'commentaire_updated_at' => $this->input->post('commentaire_updated_at'),
				'commentaire_updated_by' => $this->input->post('commentaire_updated_by'),
				'commentaire_deleted_at' => $this->input->post('commentaire_deleted_at'),
				'commentaire_deleted_by' => $this->input->post('commentaire_deleted_by'),
				'commentaire_description' => $this->input->post('commentaire_description'),
            );
            
            $commentaire_id = $this->Commentaire_model->add_commentaire($params);
            redirect('commentaire/index');
        }
        else
        {
			$this->load->model('Article_model');
			$data['all_articles'] = $this->Article_model->get_all_articles();
            
            $data['_view'] = 'commentaire/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a commentaire
     */
    function edit($commentaire_uid)
    {   
        // check if the commentaire exists before trying to edit it
        $data['commentaire'] = $this->Commentaire_model->get_commentaire($commentaire_uid);
        
        if(isset($data['commentaire']['commentaire_uid']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'commentaire_article_uid' => $this->input->post('commentaire_article_uid'),
					'commentaire_user' => $this->input->post('commentaire_user'),
					'commentaire_statut' => $this->input->post('commentaire_statut'),
					'commentaire_created_at' => $this->input->post('commentaire_created_at'),
					'commentaire_created_by' => $this->input->post('commentaire_created_by'),
					'commentaire_updated_at' => $this->input->post('commentaire_updated_at'),
					'commentaire_updated_by' => $this->input->post('commentaire_updated_by'),
					'commentaire_deleted_at' => $this->input->post('commentaire_deleted_at'),
					'commentaire_deleted_by' => $this->input->post('commentaire_deleted_by'),
					'commentaire_description' => $this->input->post('commentaire_description'),
                );

                $this->Commentaire_model->update_commentaire($commentaire_uid,$params);            
                redirect('commentaire/index');
            }
            else
            {
				$this->load->model('Article_model');
				$data['all_articles'] = $this->Article_model->get_all_articles();

                $data['_view'] = 'commentaire/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The commentaire you are trying to edit does not exist.');
    } 

    /*
     * Deleting commentaire
     */
    function remove($commentaire_uid)
    {
        $commentaire = $this->Commentaire_model->get_commentaire($commentaire_uid);

        // check if the commentaire exists before trying to delete it
        if(isset($commentaire['commentaire_uid']))
        {
            $this->Commentaire_model->delete_commentaire($commentaire_uid);
            redirect('commentaire/index');
        }
        else
            show_error('The commentaire you are trying to delete does not exist.');
    }
    
}
