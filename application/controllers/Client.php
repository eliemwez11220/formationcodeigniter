<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Client extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Client_model');
    } 

    /*
     * Listing of clients
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('client/index?');
        $config['total_rows'] = $this->Client_model->get_all_clients_count();
        $this->pagination->initialize($config);

        $data['clients'] = $this->Client_model->get_all_clients($params);
        
        $data['_view'] = 'client/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new client
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('client_nom','Client Nom','required');
		$this->form_validation->set_rules('client_email','Client Email','valid_email|is_unique[clients.client_email]');
		$this->form_validation->set_rules('client_telephone','Client Telephone','is_unique[clients.client_telephone]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'client_updated_by' => $this->input->post('client_updated_by'),
				'client_deleted_at' => $this->input->post('client_deleted_at'),
				'client_deleted_by' => $this->input->post('client_deleted_by'),
				'client_nom' => $this->input->post('client_nom'),
				'client_email' => $this->input->post('client_email'),
				'client_telephone' => $this->input->post('client_telephone'),
				'client_profession' => $this->input->post('client_profession'),
				'client_entreprise' => $this->input->post('client_entreprise'),
				'client_objet' => $this->input->post('client_objet'),
				'client_statut' => $this->input->post('client_statut'),
				'client_created_at' => $this->input->post('client_created_at'),
				'client_created_by' => $this->input->post('client_created_by'),
				'client_updated_at' => $this->input->post('client_updated_at'),
				'client_message' => $this->input->post('client_message'),
            );
            
            $client_id = $this->Client_model->add_client($params);
            redirect('client/index');
        }
        else
        {            
            $data['_view'] = 'client/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a client
     */
    function edit($client_uid)
    {   
        // check if the client exists before trying to edit it
        $data['client'] = $this->Client_model->get_client($client_uid);
        
        if(isset($data['client']['client_uid']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('client_nom','Client Nom','required');
			$this->form_validation->set_rules('client_email','Client Email','valid_email|is_unique[clients.client_email]');
			$this->form_validation->set_rules('client_telephone','Client Telephone','is_unique[clients.client_telephone]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'client_updated_by' => $this->input->post('client_updated_by'),
					'client_deleted_at' => $this->input->post('client_deleted_at'),
					'client_deleted_by' => $this->input->post('client_deleted_by'),
					'client_nom' => $this->input->post('client_nom'),
					'client_email' => $this->input->post('client_email'),
					'client_telephone' => $this->input->post('client_telephone'),
					'client_profession' => $this->input->post('client_profession'),
					'client_entreprise' => $this->input->post('client_entreprise'),
					'client_objet' => $this->input->post('client_objet'),
					'client_statut' => $this->input->post('client_statut'),
					'client_created_at' => $this->input->post('client_created_at'),
					'client_created_by' => $this->input->post('client_created_by'),
					'client_updated_at' => $this->input->post('client_updated_at'),
					'client_message' => $this->input->post('client_message'),
                );

                $this->Client_model->update_client($client_uid,$params);            
                redirect('client/index');
            }
            else
            {
                $data['_view'] = 'client/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The client you are trying to edit does not exist.');
    } 

    /*
     * Deleting client
     */
    function remove($client_uid)
    {
        $client = $this->Client_model->get_client($client_uid);

        // check if the client exists before trying to delete it
        if(isset($client['client_uid']))
        {
            $this->Client_model->delete_client($client_uid);
            redirect('client/index');
        }
        else
            show_error('The client you are trying to delete does not exist.');
    }
    
}
