<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Service extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Service_model');
    } 

    /*
     * Listing of services
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('service/index?');
        $config['total_rows'] = $this->Service_model->get_all_services_count();
        $this->pagination->initialize($config);

        $data['services'] = $this->Service_model->get_all_services($params);
        
        $data['_view'] = 'service/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new service
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('service_libelle','Service Libelle','required|max_length[75]');
		$this->form_validation->set_rules('service_image','Service Image','max_length[75]');
		$this->form_validation->set_rules('service_statut','Service Statut','max_length[25]');
		$this->form_validation->set_rules('service_created_by','Service Created By','max_length[75]');
		$this->form_validation->set_rules('service_updated_by','Service Updated By','max_length[75]');
		$this->form_validation->set_rules('service_deleted_by','Service Deleted By','max_length[75]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'service_libelle' => $this->input->post('service_libelle'),
				'service_image' => $this->input->post('service_image'),
				'service_statut' => $this->input->post('service_statut'),
				'service_created_at' => $this->input->post('service_created_at'),
				'service_created_by' => $this->input->post('service_created_by'),
				'service_updated_at' => $this->input->post('service_updated_at'),
				'service_updated_by' => $this->input->post('service_updated_by'),
				'service_deleted_at' => $this->input->post('service_deleted_at'),
				'service_deleted_by' => $this->input->post('service_deleted_by'),
				'service_description' => $this->input->post('service_description'),
            );
            
            $service_id = $this->Service_model->add_service($params);
            redirect('service/index');
        }
        else
        {            
            $data['_view'] = 'service/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a service
     */
    function edit($service_uid)
    {   
        // check if the service exists before trying to edit it
        $data['service'] = $this->Service_model->get_service($service_uid);
        
        if(isset($data['service']['service_uid']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('service_libelle','Service Libelle','required|max_length[75]');
			$this->form_validation->set_rules('service_image','Service Image','max_length[75]');
			$this->form_validation->set_rules('service_statut','Service Statut','max_length[25]');
			$this->form_validation->set_rules('service_created_by','Service Created By','max_length[75]');
			$this->form_validation->set_rules('service_updated_by','Service Updated By','max_length[75]');
			$this->form_validation->set_rules('service_deleted_by','Service Deleted By','max_length[75]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'service_libelle' => $this->input->post('service_libelle'),
					'service_image' => $this->input->post('service_image'),
					'service_statut' => $this->input->post('service_statut'),
					'service_created_at' => $this->input->post('service_created_at'),
					'service_created_by' => $this->input->post('service_created_by'),
					'service_updated_at' => $this->input->post('service_updated_at'),
					'service_updated_by' => $this->input->post('service_updated_by'),
					'service_deleted_at' => $this->input->post('service_deleted_at'),
					'service_deleted_by' => $this->input->post('service_deleted_by'),
					'service_description' => $this->input->post('service_description'),
                );

                $this->Service_model->update_service($service_uid,$params);            
                redirect('service/index');
            }
            else
            {
                $data['_view'] = 'service/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The service you are trying to edit does not exist.');
    } 

    /*
     * Deleting service
     */
    function remove($service_uid)
    {
        $service = $this->Service_model->get_service($service_uid);

        // check if the service exists before trying to delete it
        if(isset($service['service_uid']))
        {
            $this->Service_model->delete_service($service_uid);
            redirect('service/index');
        }
        else
            show_error('The service you are trying to delete does not exist.');
    }
    
}
